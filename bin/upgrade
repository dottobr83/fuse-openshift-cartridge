#!/bin/bash -eu

source $OPENSHIFT_CARTRIDGE_SDK_BASH

# these are not used yet...
#fuse_version=$1
#curr=$2
#next=$3

FUSE_BIN_DIR=${OPENSHIFT_FUSE_DIR}/container/bin
FUSE_PATCH_DIR=${OPENSHIFT_FUSE_DIR}/patches
FUSE_PASSWD_FILE=${OPENSHIFT_FUSE_DIR}/container/etc/passwd
FUSE_PID_FILE=${OPENSHIFT_FUSE_DIR}/container/instances/instance.properties
password=`cat ${FUSE_PASSWD_FILE}`

function is_running() {
   #Check if instance file exists
   if [ ! -f $FUSE_PID_FILE ]; then
      return 1
   fi

   #Check if pid exists
   PID=`cat $FUSE_PID_FILE | grep "item.0.pid" | awk -F " = " '{print $2}'`
   if [ "$PID" = "" ]; then
      return 1
   elif ps -p $PID > /dev/null; then
      return 0
   else
      rm $FUSE_PID_FILE
      return 1
   fi
}

if [ -d $FUSE_PATCH_DIR ]; then
  if is_running; then
    files=$(find $FUSE_PATCH_DIR -name "*.zip")
    for i in $files ; do
      if [ -d $i ]; then
        continue
      fi
      if [[ $i == *.zip ]]; then
        client_message "Waiting for container to be provisioned..."

        ${FUSE_BIN_DIR}/client -h ${OPENSHIFT_FUSE_IP} -u admin -p ${password} 'fabric:wait-for-provisioning --verbose --provision-timeout 120000'     
        ${FUSE_BIN_DIR}/client -h ${OPENSHIFT_FUSE_IP} -u admin -p ${password} 'dev:wait-for-service --timeout 240000 "(&(objectClass=org.apache.felix.service.command.Function)(osgi.command.scope=fabric)(osgi.command.function=patch-apply))"'

        client_message "Patching all profile versions with ${i}"

        ${FUSE_BIN_DIR}/client -h ${OPENSHIFT_FUSE_IP} -u admin -p ${password} "fabric:patch-apply --all-versions file:${i}"

        # only want to apply patches once
        rm $i
        touch "${i}.applied"
      fi
    done
  else
    client_message "Container not started so patch will be applied after the next startup."
  fi
fi
